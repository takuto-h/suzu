
NATIVE_ENABLED = true
BYTE_ENABLED = true

SUZU_FILES[] =\
  snPervasives snChar snString pos source token lexer literal selector expr parser\
  pattern insn compiler vM loader builtin prelude main

TEST_FILES[] =\
  sample/arguments.sn sample/bank_account.sn sample/coroutine.sn sample/counter.sn\
  sample/custom_output.sn sample/factorial.sn sample/hello.sn sample/labeled_blocks.sn\
  sample/local_method.sn sample/monads.sn sample/parser_combinator.sn sample/students.sn\
  sample/times.sn

PROGRAM = suzu
PROGRAM_FILES[] = $(SUZU_FILES)

TOP = suzutop
TOP_FILES[] = $(addsuffix .cmo, $(SUZU_FILES))

SN2ML = sn2ml
SN2ML_FILES[] = snPervasives sn2ml

#OCAMLOPTFLAGS = -p

.DEFAULT: $(PROGRAM)

OCamlProgram($(PROGRAM), $(PROGRAM_FILES))
OCamlProgram($(SN2ML), $(SN2ML_FILES))

%.ml: %.sn $(SN2ML)
    ./$(SN2ML) $(absname $<)

%.mli: %.sn $(SN2ML)
    ./$(SN2ML) $(absname $<)

.SCANNER: %.ml: %.sn
    println($"$@: $<")

.SCANNER: %.mli: %.sn
    println($"$@: $<")

.PHONY: run
run: $(PROGRAM)
    ./$(PROGRAM)

.PHONY: test
test: $(PROGRAM) $(TEST_FILES)
    foreach(file => ..., $(TEST_FILES))
        ./$(PROGRAM) $(file) > /dev/null

.PHONY: watch
watch: $(PROGRAM) watch.sn
    ./$(PROGRAM) watch.sn

$(TOP): $(TOP_FILES)
    $(OCAMLMKTOP) -o $(TOP) $(TOP_FILES)

.PHONY: top
top: $(TOP)
    ./$(TOP)

.PHONY: clean
clean:
    rm $(filter-proper-targets $(ls R, .))
